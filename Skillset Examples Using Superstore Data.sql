-- JUST SHOWING MY SKILLSET IN SQL HERE. IN REAL WORLD SCENARIO I WOULD DO THE SAME FUNCTIONS IN MANY DIFFERENT WAYS TO COMPLETE AN ANALYSIS. HERE I AM TRYING TO JUST SHOWCASE BE DEBTH OF SQL SKILLSET. TO 

SELECT *
FROM [PORTFOLIO].[dbo].[samplesuperstore_main]

-- ORDERS PER YEAR
SELECT YEAR(ORDER_DATE) AS 'ORDER_YEAR'
    , COUNT(DISTINCT ORDER_ID) AS 'ORDER_COUNT'
FROM [PORTFOLIO].[dbo].[samplesuperstore_main]
GROUP BY YEAR(Order_Date)
ORDER BY YEAR(ORDER_DATE) ASC

-- ORDERS AND ITEMS PURCHASED PER YEAR
SELECT YEAR(ORDER_DATE) AS 'ORDER_YEAR'
    , COUNT(DISTINCT ORDER_ID) AS 'ORDER_COUNT'
    , SUM(QUANTITY) AS 'ITEMS_PURCHASED'
FROM [PORTFOLIO].[dbo].[samplesuperstore_main]
GROUP BY YEAR(Order_Date)
ORDER BY YEAR(ORDER_DATE) ASC

-- ORDERS, ITEMS, & ITEMS PER ORDER, PER YEAR
SELECT YEAR(ORDER_DATE) AS 'ORDER_YEAR'
    , COUNT(DISTINCT ORDER_ID) AS 'ORDER_COUNT'
    , SUM(QUANTITY) AS 'ITEMS_PURCHASED'
    , CAST(SUM(QUANTITY) AS FLOAT) / CAST(COUNT(DISTINCT ORDER_ID) AS FLOAT)  AS 'AVG ITEMS PER ORDER'
FROM [PORTFOLIO].[dbo].[samplesuperstore_main]
GROUP BY YEAR(Order_Date)
ORDER BY YEAR(ORDER_DATE) ASC

-- ORDERS, ITEMS, & ITEMS PER ORDER, PER YEAR - RETURNS REMOVED
SELECT YEAR(A.ORDER_DATE) AS 'ORDER_YEAR'
    , COUNT(DISTINCT A.ORDER_ID) AS 'ORDER_COUNT'
    , SUM(QUANTITY) AS 'ITEMS_PURCHASED'
    , CAST(SUM(QUANTITY) AS FLOAT) / CAST(COUNT(DISTINCT A.ORDER_ID) AS FLOAT)  
FROM [PORTFOLIO].[dbo].[samplesuperstore_main] AS A
    LEFT JOIN [PORTFOLIO].[dbo].[samplesuperstore_returns] AS B
        ON(A.Order_ID = B.Order_ID)
WHERE B.Returned IS NULL
GROUP BY YEAR(A.Order_Date)
ORDER BY YEAR(A.ORDER_DATE) ASC

-- ORDERS BY ITEM COUNT PER YEAR - HAVING 100+ ORDERS - RETURNS REMOVED
SELECT Sub_Category
    ,YEAR(A.ORDER_DATE) AS 'ORDER_YEAR'
    , COUNT(DISTINCT A.ORDER_ID) AS 'ORDER_COUNT'
    , SUM(QUANTITY) AS 'ITEMS_PURCHASED'
    , CAST(SUM(QUANTITY) AS FLOAT) / CAST(COUNT(DISTINCT A.ORDER_ID) AS FLOAT)  
FROM [PORTFOLIO].[dbo].[samplesuperstore_main] AS A
    LEFT JOIN [PORTFOLIO].[dbo].[samplesuperstore_returns] AS B
        ON(A.Order_ID = B.Order_ID)
WHERE B.Returned IS NULL
GROUP BY Sub_Category, YEAR(A.Order_Date)
HAVING COUNT(DISTINCT A.ORDER_ID) > 99
ORDER BY YEAR(A.ORDER_DATE) ASC

-- REVENUE, PROFIT, MARGIN AND PROFIT MARGIN PER YEAR - RETURNS REMOVED
SELECT YEAR(A.ORDER_DATE) AS 'ORDER_YEAR'
    , SUM(Sales) AS 'NET_RETURNS_REVENUE'
    , SUM(Profit) AS 'NET_RETURNS_PROFIT'
    , FORMAT(CAST(SUM(Profit) AS FLOAT) / CAST(SUM(Sales) AS FLOAT), 'P1')  AS 'PROFIT_MARGIN'
FROM [PORTFOLIO].[dbo].[samplesuperstore_main] AS A
    LEFT JOIN [PORTFOLIO].[dbo].[samplesuperstore_returns] AS B
        ON(A.Order_ID = B.Order_ID)
WHERE B.Returned IS NULL
GROUP BY YEAR(A.Order_Date)
ORDER BY YEAR(A.ORDER_DATE) ASC

-- AVG PROFIT MARGIN PER YEAR BY PRODUCT - RETURNS REMOVED - rANK WORST 5
SELECT TOP 5 AA.Sub_Category
    , FORMAT(AVG(AA.PROFIT_MARGIN), 'P1') AS 'PROFIT_MARGIN'
    , RANK() OVER(ORDER BY(AVG(AA.PROFIT_MARGIN))) AS 'RANK'
FROM (
SELECT A.Sub_Category
    , YEAR(A.ORDER_DATE) AS 'ORDER_YEAR'
    , SUM(Sales) AS 'NET_RETURNS_REVENUE'
    , SUM(Profit) AS 'NET_RETURNS_PROFIT'
    , (CAST(SUM(Profit) AS FLOAT) / CAST(SUM(Sales) AS FLOAT)) AS PROFIT_MARGIN
FROM [PORTFOLIO].[dbo].[samplesuperstore_main] AS A
    LEFT JOIN [PORTFOLIO].[dbo].[samplesuperstore_returns] AS B
        ON(A.Order_ID = B.Order_ID)
WHERE B.Returned IS NULL
GROUP BY A.Sub_Category, YEAR(A.Order_Date)) AS AA
GROUP BY AA.Sub_Category
ORDER BY AVG(AA.PROFIT_MARGIN) ASC

-- PIVOT TO SHOW TABLE OF PROFIT MARGIN PER YEAR BY PRODUCT
SELECT Sub_Category
    ,FORMAT([2014], 'P1') AS '2014'
    ,FORMAT([2015], 'P1') AS '2015'
    ,FORMAT([2016], 'P1') AS '2016'
    ,FORMAT([2017], 'P1') AS '2017'
FROM 
(
SELECT A.Sub_Category
    , YEAR(A.ORDER_DATE) AS 'ORDER_YEAR'
    , (CAST(SUM(Profit) AS FLOAT) / CAST(SUM(Sales) AS FLOAT)) AS PROFIT_MARGIN
FROM [PORTFOLIO].[dbo].[samplesuperstore_main] AS A
    LEFT JOIN [PORTFOLIO].[dbo].[samplesuperstore_returns] AS B
        ON(A.Order_ID = B.Order_ID)
WHERE B.Returned IS NULL
GROUP BY A.Sub_Category, YEAR(A.Order_Date)) AS AA
PIVOT(AVG(AA.PROFIT_MARGIN) FOR AA.ORDER_YEAR IN([2014],[2015],[2016],[2017])) AS BB

-- PENCIL SALES PER YEAR - BY PRODUCT NAME
SELECT A.Product_Name
    , YEAR(A.ORDER_DATE) AS 'ORDER_YEAR'
    , SUM(A.QUANTITY) AS 'ORDER_COUNT'
FROM [PORTFOLIO].[dbo].[samplesuperstore_main] AS A
    LEFT JOIN [PORTFOLIO].[dbo].[samplesuperstore_returns] AS B
        ON(A.Order_ID = B.Order_ID)
WHERE A.Product_Name LIKE '%PENCIL%'
GROUP BY A.Product_Name, YEAR(A.ORDER_DATE)

-- AVERAGE DAYS TO SHIP PER PRODUCT IN 2017
SELECT Sub_Category
    , CAST(AVG(DATEDIFF(DAY,Order_Date,Ship_Date)) AS DECIMAL(10,1)) AS 'AVG_SHIP_DAYS'
FROM [PORTFOLIO].[dbo].[samplesuperstore_main]
WHERE YEAR(Order_Date) = '2017'
GROUP BY Sub_Category

-- ROW LEVEL DATA OF ALABAMA SALES - WITH % OF TOTAL CITY SALES SHOWN IN PARTITION
SELECT Row_ID
      ,Order_ID
      ,Order_Date
      ,City
      ,State
      ,Sub_Category
      ,Product_Name
      ,Sales
      ,Quantity
      , SUM(QUANTITY) OVER (PARTITION BY CITY) AS 'TOTAL_CITY_QTY'
      ,FORMAT(Quantity / CAST((SUM(QUANTITY) OVER (PARTITION BY CITY)) AS FLOAT), 'P1') AS '%_OF_CITY'
FROM [PORTFOLIO].[dbo].[samplesuperstore_main]
WHERE YEAR(Order_Date) = '2017'
    AND STATE = 'ALABAMA'
ORDER BY CITY

-- LIST OF CITIES PURCHSED FROM IN 2017 USING UNION
SELECT CITY
    , STATE
    , COUNTRY
FROM [PORTFOLIO].[dbo].[samplesuperstore_main]
WHERE YEAR(Order_Date) = '2017'
UNION
SELECT CITY
    , STATE
    , COUNTRY
FROM [PORTFOLIO].[dbo].[samplesuperstore_returns]
WHERE YEAR(Order_Date) = '2017'
